[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://cdx1gqu6jeydk"]

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_mgcm5"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_w8mu8"]
expanded_output_ports = [0]
input_name = "node_position_world"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_v62sd"]
parameter_name = "Smoothness"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_vd47b"]
function = 1

[resource]
code = "shader_type spatial;
uniform float Smoothness : hint_range(0, 1) = 0.5;



void fragment() {
// Input:5
	vec3 n_out5p0 = NODE_POSITION_WORLD;


// MultiplyAdd:3
	vec3 n_in3p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_in3p2 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out3p0 = fma(n_out5p0, n_in3p1, n_in3p2);


// VectorFunc:7
	vec3 n_out7p0 = max(min(n_out3p0, vec3(1.0)), vec3(0.0));


// FloatParameter:6
	float n_out6p0 = Smoothness;


// Output:0
	ALBEDO = n_out7p0;
	ROUGHNESS = n_out6p0;


}
"
graph_offset = Vector2(-448.765, -144.505)
nodes/fragment/0/position = Vector2(300, 20)
nodes/fragment/3/node = SubResource("VisualShaderNodeMultiplyAdd_mgcm5")
nodes/fragment/3/position = Vector2(-200, 0)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_w8mu8")
nodes/fragment/5/position = Vector2(-660, 0)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_v62sd")
nodes/fragment/6/position = Vector2(-80, 220)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorFunc_vd47b")
nodes/fragment/7/position = Vector2(60, 40)
nodes/fragment/connections = PackedInt32Array(5, 0, 3, 0, 6, 0, 0, 3, 3, 0, 7, 0, 7, 0, 0, 0)
